---
import LightDarkButton from "./LightDarkButton.astro";
---

<nav>
    <div class="links">
        <a href="#about">About</a>
        <a href="#projects">Projects</a>
        <a href="#contact">Contact</a>
        <LightDarkButton />
    </div>
</nav>

<style>
    nav {
        font-weight: bold;
        position: fixed;
        top: 0;
        width: 100%;
        background-color: var(--background-color);
        border-bottom: 2px outset var(--primary-color);
        z-index: 1;
    }

    .links {
        display: flex;
        flex-direction: row;
        list-style-type: none;
        margin: 0;
        padding: 0;
        align-items: center;
        justify-content: center;
    }

    a {
        text-decoration: none;
        font-size: 1em;
        color: var(--text-color);
        padding: 15px;
    }

    a:hover {
        background-color: var(--primary-color);
    }
    .active {
        background-color: var(--primary-color);
    }
</style>

<script>
    const sections = document.querySelectorAll("section[id]");
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                const id = entry.target.getAttribute("id");
                const link = document.querySelector(`nav a[href="#${id}"]`);
                if (entry.isIntersecting) {
                    link?.classList.add("active");
                    const otherSections = Array.from(sections).filter(
                        (section) => section.id !== id,
                    );
                    otherSections.forEach((otherSection) => {
                        const otherLink = document.querySelector(
                            `nav a[href="#${otherSection.id}"]`,
                        );
                        otherLink?.classList.remove("active");
                    });
                } else {
                    link?.classList.remove("active");
                }
            });
        },
        {
            root: null,
            rootMargin: "0px",
            threshold: [0.2],
        },
    );
    sections.forEach((section) => {
        observer.observe(section);
    });
</script>
